{
  "version": 3,
  "sources": ["../src/app.js"],
  "sourcesContent": ["const sleep = ms => new Promise(resolve => setTimeout(() => resolve(), ms));\n\nfunction html(literals, ...expr) {\n    let string = \"\";\n\n    for (const [index, literal] of literals.entries()) {\n        string += literal;\n        if (index in expr) string += expr[index];\n    }\n\n    return string;\n}\n\nlet params = new URL(window.location).searchParams;\nif (params.has(\"data\")) {\n    const data = JSON.parse(window.atob(params.get(\"data\")));\n    document.getElementById(\"username\").value = data.username;\n    document.getElementById(\"submission\").value = data.links;\n}\n\nfunction resetDatePicker() {\n    let now = new Date();\n    document.getElementById(\"startdate\").valueAsDate = new Date(\n        now.getUTCFullYear(),\n        now.getUTCMonth(),\n        1\n    );\n}\nresetDatePicker();\n\nasync function getAuthorization() {\n    if (!localStorage.getItem(\"auth\")) {\n        return await showAuthModal();\n    } else {\n        const obj = JSON.parse(localStorage.getItem(\"auth\"));\n        obj.toString = function() {\n            return `z=${this.username}&y=${this.apikey}`;\n        }\n        return obj;\n    }\n}\n\nfunction showAuthModal() {\n    let template = document.getElementById(\"authModalTemplate\");\n    let modal = template.content.cloneNode(true);\n    let button = modal.children[0].querySelector(\"button\");\n    document.body.appendChild(modal);\n\n    return new Promise(resolve => {\n        button.addEventListener(\"click\", ev => {\n            let modal = document.querySelector(\"div.authModal\");\n            let auth = {\n                username: modal.querySelector(\"input[name='username']\").value,\n                apikey: modal.querySelector(\"input[name='apikey']\").value,\n                toString: function() {\n                    return `z=${this.username}&y=${this.apikey}`;\n                },\n            };\n            if (modal.querySelector(\"input[name='saveinfo']\").checked) {\n                localStorage.setItem(\"auth\", JSON.stringify(auth));\n            }\n            document.body.removeChild(modal);\n            resolve(auth);\n        });\n    });\n}\n\ndocument.getElementById(\"verify\").addEventListener(\"click\", async () => {\n    const auth = await getAuthorization();\n    const username = document.getElementById(\"username\");\n    const altUsername = document.getElementById(\"altUsername\");\n    const submission = document.getElementById(\"submission\");\n    const date = document.getElementById(\"startdate\");\n\n    if (date.value == \"\") {\n        date.style.backgroundColor = \"red\";\n        date.addEventListener(\"focus\", () => date.style.backgroundColor = \"revert\", { once: true });\n        return;\n    }\n\n    const games = Array.from(\n        submission.value.matchAll(\"https://(?:www.)?retroachievements.org/game/([0-9]+)\")\n    ).map(([_, id]) => id);\n\n    const achievements = Array.from(\n        submission.value.matchAll(\"https://(?:www.)?retroachievements.org/achievement/([0-9]+)\")\n    ).map(([_, id]) => id);\n\n    switchToTab(\"output\");\n    username.disabled = true;\n    altUsername.disabled = true;\n    date.disabled = true;\n\n    output.innerHTML = html`\n        <h1>Games</h1><hr />\n        ${games.map(id => html`<div class=\"game\">\n            <div class=\"icon\"></div>\n            <a class=\"title\" href=\"https://retroachievements.org/game/${id}\">${id}</a>\n            <span class=\"timestamp\"></span>\n            <div class=\"status\">?</div>\n        </div>`).join(\"\")}\n\n        <h1>Achievements</h1><hr />\n        ${achievements.map(id => html`<div class=\"achievement\">\n            <div class=\"icon\"></div>\n            <a class=\"title\" href=\"https://retroachievements.org/achievement/${id}\">${id}</a>\n            <span class=\"timestamp\"></span>\n            <div class=\"status\">?</div>\n        </div>`).join(\"\")}\n    `;\n\n    const render = async (elem, func) => {\n        const id = elem.querySelector(\".title\").textContent;\n        const obj = await func(auth, username.value, id, date.valueAsDate);\n        const statusElem = elem.querySelector(\".status\")\n        statusElem.classList.add(...obj.status.split(\" \"));\n        statusElem.textContent = obj.status.includes(\"success\") ?\n            obj.status.includes(\"alt\") ? \"A\" : \"\u2713\" : \"X\";\n\n        const img = document.createElement(\"img\");\n        img.src = `https://media.retroachievements.org${obj.icon}`;\n        elem.querySelector(\".icon\").appendChild(img);\n\n        elem.querySelector(\".title\").textContent = obj.title;\n        elem.querySelector(\".timestamp\").textContent = obj.timestamp;\n    };\n\n    const sleepTime = 1000;\n\n    for (const elem of output.querySelectorAll(\".game\")) {\n        await render(elem, checkGame);\n        await sleep(sleepTime);\n    }\n\n    for (const elem of output.querySelectorAll(\".achievement\")) {\n        await render(elem, checkAchievement);\n        await sleep(sleepTime);\n    }\n\n    username.disabled = false;\n    altUsername.disabled = false;\n    date.disabled = false;\n});\n\ndocument.getElementById(\"clear\").addEventListener(\"click\", () => {\n    document.getElementById(\"username\").value = \"\";\n    document.getElementById(\"submission\").value = \"\";\n    document.getElementById(\"output\").innerHTML = \"\";\n    document.getElementById(\"username\").disabled = false;\n    document.getElementById(\"startdate\").disabled = false;\n    switchToTab(\"submission\");\n});\n\ndocument.getElementById(\"optionResetAuth\").addEventListener(\"click\", () => {\n    localStorage.removeItem(\"auth\");\n});\n\ndocument.getElementById(\"optionCheckDate\").addEventListener(\"change\", ev => {\n    const datePicker = document.getElementById(\"startdate\");\n    if (ev.target.checked) {\n        datePicker.disabled = false;\n        resetDatePicker();\n    } else {\n        datePicker.disabled = true;\n        datePicker.valueAsDate = new Date(0);\n    }\n});\n\nfor (const elem of document.querySelectorAll(\"#tabs > div\")) {\n    const target = elem.dataset.target;\n    elem.addEventListener(\"mousedown\", () => {\n        switchToTab(target);\n    });\n}\n\nfunction switchToTab(name) {\n    document.getElementById(name).style.display = \"block\";\n    for (const elem of document.querySelectorAll(`#content > :not(#${name})`)) {\n        elem.style.display = \"none\";\n    }\n    for (const elem of document.querySelectorAll(\"#tabs > div\")) {\n        elem.classList.remove(\"selected\");\n        if (elem.dataset.target == name) {\n            elem.classList.add(\"selected\");\n        }\n    }\n}\n\nasync function checkGame(auth, username, id, date) {\n    const url = `https://retroachievements.org/API/API_GetGameInfoAndUserProgress.php?${auth}&u=${username}&g=${id}&a=1`;\n    const result = await fetch(url).then(a => a.json());\n\n    let status = \"failure\";\n    switch (result.HighestAwardKind) {\n        case \"mastered\":\n            status = \"success mastered\";\n            break;\n        case \"beaten-hardcore\":\n            status = \"success\";\n            break;\n        default:\n            break;\n    }\n\n    const awardDate = new Date(result.HighestAwardDate);\n    if (awardDate < date) {\n        status = \"failure\";\n    }\n\n    const timestamp = result.HighestAwardDate ? awardDate.toLocaleDateString() : \"\";\n\n    const alt = document.getElementById(\"altUsername\").value;\n    if (username != alt && alt.length && status == \"failure\") {\n        const altResult = await checkGame(auth, alt, id, date);\n        if (altResult.status.includes(\"success\")) {\n            altResult.status += \" alt\";\n            return altResult;\n        }\n    }\n\n    return {\n        status,\n        title: result.Title,\n        icon: result.ImageIcon,\n        timestamp,\n    }\n}\n\nasync function checkAchievement(auth, username, id, date) {\n    const info = await fetch(`https://retroachievements.org/API/API_GetAchievementUnlocks.php?${auth}&a=${id}&c=1`).then(a => a.json());\n    const game = await fetch(`https://retroachievements.org/API/API_GetGameInfoAndUserProgress.php?${auth}&u=${username}&g=${info.Game.ID}&a=0`).then(a => a.json());\n    const achievement = game.Achievements[info.Achievement.ID];\n    const unlockDate = \"DateEarnedHardcore\" in achievement ? new Date(achievement.DateEarnedHardcore) : null;\n\n    return {\n        status: unlockDate > date ? \"success\" : \"failure\",\n        title: info.Achievement.Title,\n        icon: `/Badge/${achievement.BadgeName}.png`,\n        timestamp: unlockDate ? unlockDate.toLocaleDateString() : \"N/A\",\n    }\n}\n"],
  "mappings": ";;AAAA,MAAM,QAAQ,QAAM,IAAI,QAAQ,aAAW,WAAW,MAAM,QAAQ,GAAG,EAAE,CAAC;AAE1E,WAAS,KAAK,aAAa,MAAM;AAC7B,QAAI,SAAS;AAEb,eAAW,CAAC,OAAO,OAAO,KAAK,SAAS,QAAQ,GAAG;AAC/C,gBAAU;AACV,UAAI,SAAS,KAAM,WAAU,KAAK,KAAK;AAAA,IAC3C;AAEA,WAAO;AAAA,EACX;AAEA,MAAI,SAAS,IAAI,IAAI,OAAO,QAAQ,EAAE;AACtC,MAAI,OAAO,IAAI,MAAM,GAAG;AACpB,UAAM,OAAO,KAAK,MAAM,OAAO,KAAK,OAAO,IAAI,MAAM,CAAC,CAAC;AACvD,aAAS,eAAe,UAAU,EAAE,QAAQ,KAAK;AACjD,aAAS,eAAe,YAAY,EAAE,QAAQ,KAAK;AAAA,EACvD;AAEA,WAAS,kBAAkB;AACvB,QAAI,MAAM,oBAAI,KAAK;AACnB,aAAS,eAAe,WAAW,EAAE,cAAc,IAAI;AAAA,MACnD,IAAI,eAAe;AAAA,MACnB,IAAI,YAAY;AAAA,MAChB;AAAA,IACJ;AAAA,EACJ;AACA,kBAAgB;AAEhB,iBAAe,mBAAmB;AAC9B,QAAI,CAAC,aAAa,QAAQ,MAAM,GAAG;AAC/B,aAAO,MAAM,cAAc;AAAA,IAC/B,OAAO;AACH,YAAM,MAAM,KAAK,MAAM,aAAa,QAAQ,MAAM,CAAC;AACnD,UAAI,WAAW,WAAW;AACtB,eAAO,KAAK,KAAK,QAAQ,MAAM,KAAK,MAAM;AAAA,MAC9C;AACA,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,WAAS,gBAAgB;AACrB,QAAI,WAAW,SAAS,eAAe,mBAAmB;AAC1D,QAAI,QAAQ,SAAS,QAAQ,UAAU,IAAI;AAC3C,QAAI,SAAS,MAAM,SAAS,CAAC,EAAE,cAAc,QAAQ;AACrD,aAAS,KAAK,YAAY,KAAK;AAE/B,WAAO,IAAI,QAAQ,aAAW;AAC1B,aAAO,iBAAiB,SAAS,QAAM;AACnC,YAAIA,SAAQ,SAAS,cAAc,eAAe;AAClD,YAAI,OAAO;AAAA,UACP,UAAUA,OAAM,cAAc,wBAAwB,EAAE;AAAA,UACxD,QAAQA,OAAM,cAAc,sBAAsB,EAAE;AAAA,UACpD,UAAU,WAAW;AACjB,mBAAO,KAAK,KAAK,QAAQ,MAAM,KAAK,MAAM;AAAA,UAC9C;AAAA,QACJ;AACA,YAAIA,OAAM,cAAc,wBAAwB,EAAE,SAAS;AACvD,uBAAa,QAAQ,QAAQ,KAAK,UAAU,IAAI,CAAC;AAAA,QACrD;AACA,iBAAS,KAAK,YAAYA,MAAK;AAC/B,gBAAQ,IAAI;AAAA,MAChB,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AAEA,WAAS,eAAe,QAAQ,EAAE,iBAAiB,SAAS,YAAY;AACpE,UAAM,OAAO,MAAM,iBAAiB;AACpC,UAAM,WAAW,SAAS,eAAe,UAAU;AACnD,UAAM,cAAc,SAAS,eAAe,aAAa;AACzD,UAAM,aAAa,SAAS,eAAe,YAAY;AACvD,UAAM,OAAO,SAAS,eAAe,WAAW;AAEhD,QAAI,KAAK,SAAS,IAAI;AAClB,WAAK,MAAM,kBAAkB;AAC7B,WAAK,iBAAiB,SAAS,MAAM,KAAK,MAAM,kBAAkB,UAAU,EAAE,MAAM,KAAK,CAAC;AAC1F;AAAA,IACJ;AAEA,UAAM,QAAQ,MAAM;AAAA,MAChB,WAAW,MAAM,SAAS,sDAAsD;AAAA,IACpF,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE;AAErB,UAAM,eAAe,MAAM;AAAA,MACvB,WAAW,MAAM,SAAS,6DAA6D;AAAA,IAC3F,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE;AAErB,gBAAY,QAAQ;AACpB,aAAS,WAAW;AACpB,gBAAY,WAAW;AACvB,SAAK,WAAW;AAEhB,WAAO,YAAY;AAAA;AAAA,UAEb,MAAM,IAAI,QAAM;AAAA;AAAA,wEAE8C,EAAE,KAAK,EAAE;AAAA;AAAA;AAAA,eAGlE,EAAE,KAAK,EAAE,CAAC;AAAA;AAAA;AAAA,UAGf,aAAa,IAAI,QAAM;AAAA;AAAA,+EAE8C,EAAE,KAAK,EAAE;AAAA;AAAA;AAAA,eAGzE,EAAE,KAAK,EAAE,CAAC;AAAA;AAGrB,UAAM,SAAS,OAAO,MAAM,SAAS;AACjC,YAAM,KAAK,KAAK,cAAc,QAAQ,EAAE;AACxC,YAAM,MAAM,MAAM,KAAK,MAAM,SAAS,OAAO,IAAI,KAAK,WAAW;AACjE,YAAM,aAAa,KAAK,cAAc,SAAS;AAC/C,iBAAW,UAAU,IAAI,GAAG,IAAI,OAAO,MAAM,GAAG,CAAC;AACjD,iBAAW,cAAc,IAAI,OAAO,SAAS,SAAS,IAClD,IAAI,OAAO,SAAS,KAAK,IAAI,MAAM,WAAM;AAE7C,YAAM,MAAM,SAAS,cAAc,KAAK;AACxC,UAAI,MAAM,sCAAsC,IAAI,IAAI;AACxD,WAAK,cAAc,OAAO,EAAE,YAAY,GAAG;AAE3C,WAAK,cAAc,QAAQ,EAAE,cAAc,IAAI;AAC/C,WAAK,cAAc,YAAY,EAAE,cAAc,IAAI;AAAA,IACvD;AAEA,UAAM,YAAY;AAElB,eAAW,QAAQ,OAAO,iBAAiB,OAAO,GAAG;AACjD,YAAM,OAAO,MAAM,SAAS;AAC5B,YAAM,MAAM,SAAS;AAAA,IACzB;AAEA,eAAW,QAAQ,OAAO,iBAAiB,cAAc,GAAG;AACxD,YAAM,OAAO,MAAM,gBAAgB;AACnC,YAAM,MAAM,SAAS;AAAA,IACzB;AAEA,aAAS,WAAW;AACpB,gBAAY,WAAW;AACvB,SAAK,WAAW;AAAA,EACpB,CAAC;AAED,WAAS,eAAe,OAAO,EAAE,iBAAiB,SAAS,MAAM;AAC7D,aAAS,eAAe,UAAU,EAAE,QAAQ;AAC5C,aAAS,eAAe,YAAY,EAAE,QAAQ;AAC9C,aAAS,eAAe,QAAQ,EAAE,YAAY;AAC9C,aAAS,eAAe,UAAU,EAAE,WAAW;AAC/C,aAAS,eAAe,WAAW,EAAE,WAAW;AAChD,gBAAY,YAAY;AAAA,EAC5B,CAAC;AAED,WAAS,eAAe,iBAAiB,EAAE,iBAAiB,SAAS,MAAM;AACvE,iBAAa,WAAW,MAAM;AAAA,EAClC,CAAC;AAED,WAAS,eAAe,iBAAiB,EAAE,iBAAiB,UAAU,QAAM;AACxE,UAAM,aAAa,SAAS,eAAe,WAAW;AACtD,QAAI,GAAG,OAAO,SAAS;AACnB,iBAAW,WAAW;AACtB,sBAAgB;AAAA,IACpB,OAAO;AACH,iBAAW,WAAW;AACtB,iBAAW,cAAc,oBAAI,KAAK,CAAC;AAAA,IACvC;AAAA,EACJ,CAAC;AAED,aAAW,QAAQ,SAAS,iBAAiB,aAAa,GAAG;AACzD,UAAM,SAAS,KAAK,QAAQ;AAC5B,SAAK,iBAAiB,aAAa,MAAM;AACrC,kBAAY,MAAM;AAAA,IACtB,CAAC;AAAA,EACL;AAEA,WAAS,YAAY,MAAM;AACvB,aAAS,eAAe,IAAI,EAAE,MAAM,UAAU;AAC9C,eAAW,QAAQ,SAAS,iBAAiB,oBAAoB,IAAI,GAAG,GAAG;AACvE,WAAK,MAAM,UAAU;AAAA,IACzB;AACA,eAAW,QAAQ,SAAS,iBAAiB,aAAa,GAAG;AACzD,WAAK,UAAU,OAAO,UAAU;AAChC,UAAI,KAAK,QAAQ,UAAU,MAAM;AAC7B,aAAK,UAAU,IAAI,UAAU;AAAA,MACjC;AAAA,IACJ;AAAA,EACJ;AAEA,iBAAe,UAAU,MAAM,UAAU,IAAI,MAAM;AAC/C,UAAM,MAAM,wEAAwE,IAAI,MAAM,QAAQ,MAAM,EAAE;AAC9G,UAAM,SAAS,MAAM,MAAM,GAAG,EAAE,KAAK,OAAK,EAAE,KAAK,CAAC;AAElD,QAAI,SAAS;AACb,YAAQ,OAAO,kBAAkB;AAAA,MAC7B,KAAK;AACD,iBAAS;AACT;AAAA,MACJ,KAAK;AACD,iBAAS;AACT;AAAA,MACJ;AACI;AAAA,IACR;AAEA,UAAM,YAAY,IAAI,KAAK,OAAO,gBAAgB;AAClD,QAAI,YAAY,MAAM;AAClB,eAAS;AAAA,IACb;AAEA,UAAM,YAAY,OAAO,mBAAmB,UAAU,mBAAmB,IAAI;AAE7E,UAAM,MAAM,SAAS,eAAe,aAAa,EAAE;AACnD,QAAI,YAAY,OAAO,IAAI,UAAU,UAAU,WAAW;AACtD,YAAM,YAAY,MAAM,UAAU,MAAM,KAAK,IAAI,IAAI;AACrD,UAAI,UAAU,OAAO,SAAS,SAAS,GAAG;AACtC,kBAAU,UAAU;AACpB,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,WAAO;AAAA,MACH;AAAA,MACA,OAAO,OAAO;AAAA,MACd,MAAM,OAAO;AAAA,MACb;AAAA,IACJ;AAAA,EACJ;AAEA,iBAAe,iBAAiB,MAAM,UAAU,IAAI,MAAM;AACtD,UAAM,OAAO,MAAM,MAAM,mEAAmE,IAAI,MAAM,EAAE,MAAM,EAAE,KAAK,OAAK,EAAE,KAAK,CAAC;AAClI,UAAM,OAAO,MAAM,MAAM,wEAAwE,IAAI,MAAM,QAAQ,MAAM,KAAK,KAAK,EAAE,MAAM,EAAE,KAAK,OAAK,EAAE,KAAK,CAAC;AAC/J,UAAM,cAAc,KAAK,aAAa,KAAK,YAAY,EAAE;AACzD,UAAM,aAAa,wBAAwB,cAAc,IAAI,KAAK,YAAY,kBAAkB,IAAI;AAEpG,WAAO;AAAA,MACH,QAAQ,aAAa,OAAO,YAAY;AAAA,MACxC,OAAO,KAAK,YAAY;AAAA,MACxB,MAAM,UAAU,YAAY,SAAS;AAAA,MACrC,WAAW,aAAa,WAAW,mBAAmB,IAAI;AAAA,IAC9D;AAAA,EACJ;",
  "names": ["modal"]
}
